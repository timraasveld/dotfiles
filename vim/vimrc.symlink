syntax on

" Wrap gitcommit file types at the appropriate length
filetype indent plugin on

set runtimepath ^=~/.dotfiles/vim

set pastetoggle=<F10>

set wildmenu
set wildmode=longest,list
set wildignore+=*.so,*.swp,*.zip
inoremap <Tab> <C-X><C-F>

set noswapfile
set mouse=nicr "Enable scrolling on OSX

call pathogen#infect()

filetype plugin indent on

set smartindent
set tabstop=2
set shiftwidth=2
set expandtab

:let g:html_indent_inctags="body,head"
"--------------------
" Function: Open tag under cursor in new tab
" Source:   http://stackoverflow.com/questions/563616/vimctags-tips-and-tricks
"--------------------
map <C-\> :tab split<CR>:exec("tag ".expand("<cword>"))<CR>
"--------------------
" Function: Remap keys to make it more similar to firefox tab functionality
" Purpose:  Because I am familiar with firefox tab functionality
"--------------------
map     <C-T>       :tabnew<CR>
map     <C-N>       :!gvim &<CR><CR>

" Easy buffer-switching with ALT+arrow keys
nmap <silent> <A-Up> :wincmd k<CR>
nmap <silent> <A-Down> :wincmd j<CR>
nmap <silent> <A-Left> :wincmd h<CR>
nmap <silent> <A-Right> :wincmd l<CR>
nmap <C-L> :set number!<CR>
" ] to preview tag, [ to close previews
nmap ] <C-w>]
nmap [ :wq<cr>



" Expand %% to the current files' directory
cabbr %% <C-R>=expand('%:p:h')<CR>

" Start interactive EasyAlign in visual mode (e.g. vipga)
xmap ga <Plug>(EasyAlign)

" Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)

nmap <Tab> :TlistToggle<CR>

map <Leader> <Plug>(easymotion-prefix)

" Prevent accidentally closing vim with ctrl-C
map ^C esc

nmap <F5> :NERDTreeToggle %<CR>
nmap s :Ack -i ""<left>
nmap T :Tagbar<CR>

set backspace=2

" Show column and line number
set ruler

" Highlight search results
set hlsearch

let g:ctrlp_match_window = 'results:50'
let g:ctrlp_show_hidden = 1
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v(node_modules|\.git|ftp_home|tmp)',
  \ 'file': '\v\.(exe|so|dll|DS_Store|keep)$',
  \ }
:let g:ctrlp_max_files=10000

" Sudo-save
command W w !sudo tee % > /dev/null

" Function to remove trailing whitespace
function ShowSpaces(...)
  let @/='\v(\s+$)|( +\ze\t)'
  let oldhlsearch=&hlsearch
  if !a:0
    let &hlsearch=!&hlsearch
  else
    let &hlsearch=a:1
  end
  return oldhlsearch
endfunction
function TrimSpaces() range
  let oldhlsearch=ShowSpaces(1)
  execute a:firstline.",".a:lastline."substitute ///ge"
  let &hlsearch=oldhlsearch
endfunction
command -bar -nargs=? ShowSpaces call ShowSpaces(<args>)
command -bar -nargs=0 -range=% TrimSpaces <line1>,<line2>call TrimSpaces()
call pathogen#helptags()

" Case-insensitive by default, but case-sensitive if search contains capitals
set smartcase

au BufNewFile,BufRead *.ts set filetype=javascript
